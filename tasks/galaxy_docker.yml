---

- name: Install docker dependencies
  yum:
    name: python-docker-py
    state: present
  when: ansible_os_family == 'RedHat'

- name: Install docker dependencies
  apt:
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Create docker image directory
  file:
    path: "{{ item }}"
    state: directory
    mode: "775"
  with_items:
    - "{{ docker_dir }}"
    - "{{ galaxy_central_dir }}"

- name: Install docker with image directory on volume
  include_role:
    name: indigo-dc.docker
  vars:
    docker_config:  { "data-root": "{{ docker_dir }}" }

- name: Run galaxy container
  docker_container:
    name: "{{ galaxy_docker_name }}"
    image: "{{ galaxy_docker_image }}"
    detach: true
    state: started
    published_ports: "{{ docker_ports_mapping }}"
    volumes: "{{ docker_volume_mapping }}"

- name: 'Wait Galaxy'
  wait_for:
    host: 127.0.0.1
    port: '48888'
    timeout: 300

- name: 'Wait galaxy-central correctly mounted'
  wait_for:
    path: '{{ galaxy_central_dir }}/config/galaxy.yml.sample'

- name: Check if galaxy.yml exists
  stat:
    path: "{{ galaxy_central_dir }}/config/galaxy.yml"
  register: galaxy_config_file

- name: Edit galaxy.yml config file
  template:
    dest: "{{ galaxy_central_dir }}/config/galaxy.yml"
    src: galaxy.yml.j2
  when: not galaxy_config_file.stat.exists
